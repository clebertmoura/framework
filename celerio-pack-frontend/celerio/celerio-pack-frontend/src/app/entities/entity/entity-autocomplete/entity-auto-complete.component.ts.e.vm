$output.file("src/app/entities/${entity.model.type.toLowerCase()}/${entity.model.type.toLowerCase()}-autocomplete/${entity.model.type.toLowerCase()}-autocomplete.component.ts")##
import { Component, OnInit, forwardRef } from '@angular/core';
import { EntityCompleteComponent, MessageService } from 'framework-lib';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ${entity.model.type} } from '../${entity.model.type.toLowerCase()}';
import { ${entity.service.type} } from '../${entity.model.type.toLowerCase()}.service';

export const ${entity.model.type.toUpperCase()}_AUTO_COMPLETE_CONTROL_VALUE_ACCESSOR: any = {
  provide: NG_VALUE_ACCESSOR,
  useExisting: forwardRef(() => ${entity.model.type}AutocompleteComponent),
  multi: true
};

@Component({
  selector: 'app-${entity.model.type.toLowerCase()}-autocomplete',
  templateUrl: './${entity.model.type.toLowerCase()}-autocomplete.component.html',
  styleUrls: ['./${entity.model.type.toLowerCase()}-autocomplete.component.scss'],
  providers: [${entity.model.type.toUpperCase()}_AUTO_COMPLETE_CONTROL_VALUE_ACCESSOR]
})
export class ${entity.model.type}AutocompleteComponent extends EntityCompleteComponent<${entity.model.type}, ${entity.model.type}Service> {

  constructor(protected entityService: ${entity.model.type}Service, protected messageService: MessageService) {
    super(entityService, messageService);
  }

}

