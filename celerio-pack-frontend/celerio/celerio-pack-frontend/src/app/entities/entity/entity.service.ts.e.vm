$output.file("src/app/entities/${entity.model.type.toLowerCase()}/${entity.model.type.toLowerCase()}.service.ts")##
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable, forkJoin } from 'rxjs';
import { environment } from '../../../environments/environment';
import { map, catchError } from 'rxjs/operators';
import { EntityService, PageRequest, PageResponse } from 'framework-lib';
import { ${entity.model.type} } from './${entity.model.type.toLowerCase()}';

@Injectable({
  providedIn: 'root'
})
export class ${entity.service.type} extends EntityService<${entity.model.type}> {

  constructor(protected http: HttpClient) {
    super(http, '${entity.model.type}');
    this.apiUrl = environment.baseUrl;
  }

  public newEntity(response?: any): ${entity.model.type} {
    return new ${entity.model.type}(response, 1);
  }

  public newEntityList(response: any): ${entity.model.type}[] {
    return ${entity.model.type}.toArray(response, 1);
  }

  protected flatMapEntityRelations(entity: ${entity.model.type}): Observable<any[]> {
    const observables: Observable<any>[] = [];

    if (observables.length > 0) {
      return forkJoin(observables);
    } else {
      return ;
    }
  }

  protected mapEntityRelations(entity: ${entity.model.type}, response: any): ${entity.model.type} {
    return entity;
  }

}
