/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template celerio-pack-backend:src/main/java/service/endpoint/Endpoint.java.e.vm
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package br.jus.framework.piloto.service.endpoint;

import java.util.List;
import java.util.stream.Collectors;

import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.ws.rs.Path;

import br.jus.framework.piloto.dao.UsuarioDao;
import br.jus.framework.piloto.domain.Usuario;
import br.jus.framework.piloto.manager.UsuarioManager;
import br.jus.framework.piloto.service.resource.UsuarioResource;
import br.jus.framework.service.impl.BaseEntityAuditedResourceEndpointImpl;

/**
 * A simple Endpoint for Usuario.
 */
@Stateless
@Path("/Usuario")
public class UsuarioEndpoint extends BaseEntityAuditedResourceEndpointImpl<Long, Usuario, UsuarioResource, UsuarioDao, UsuarioManager> {

    private static final long serialVersionUID = 1L;

    public UsuarioEndpoint() {
        super(Long.class, Usuario.class, UsuarioResource.class);
    }

    @Override
    @Inject
    protected void setManager(UsuarioManager manager) {
        super.setManager(manager);
    }

    @Override
    @Inject
    protected void setSearch(UsuarioDao search) {
        super.setSearch(search);
    }

    @Override
    public UsuarioResource toResource(Usuario entity, UsuarioResource resource, int depth) {
        resource = super.toResource(entity, resource, depth);
        if (resource != null) {
            resource.setNome(entity.getNome());
            resource.setLogin(entity.getLogin());
            resource.setPassword(entity.getPassword());
            resource.setEmail(entity.getEmail());
            resource.setFotoFileName(entity.getFotoFileName());
            resource.setFotoContentType(entity.getFotoContentType());
            resource.setFotoSize(entity.getFotoSize());
            if (depth-- > 0) {
                final int fdepth = depth;
            }
        }
        return resource;
    }

    /**
     * Converts the passed dto to a Usuario.
     * Convenient for query by example.
     */
    public Usuario fromResource(UsuarioResource resource, Usuario entity, int depth) {
        entity = super.fromResource(resource, entity, depth);
        if (entity != null) {
            entity.setNome(resource.getNome());
            entity.setLogin(resource.getLogin());
            entity.setPassword(resource.getPassword());
            entity.setEmail(resource.getEmail());
            entity.setFotoFileName(resource.getFotoFileName());
            entity.setFotoContentType(resource.getFotoContentType());
            entity.setFotoSize(resource.getFotoSize());
            if (depth-- > 0) {
            }
        }
        return entity;
    }
}