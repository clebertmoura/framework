/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template celerio-pack-backend:src/main/java/dao/Dao.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
 */
package br.jus.framework.piloto.dao;

import javax.ejb.Stateless;

import br.jus.framework.piloto.core.dao.AppBaseDaoImpl;
import br.jus.framework.piloto.domain.Filial;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.Path;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import br.jus.framework.search.impl.Operator;
import br.jus.framework.search.impl.PageRequest;

/**
 * Implementação de DAO da entidade: {@link Filial} 
 *
 * @see AppBaseDaoImpl
 */
@Stateless
public class FilialDao extends AppBaseDaoImpl<Long, Filial> {

    private static final long serialVersionUID = 1L;

    public FilialDao() {
        super(Filial.class);
    }

    @Override
    protected void addGlobalFilterPredicates(PageRequest pageRequest, List<Predicate> predicates, CriteriaBuilder cBuilder, Root<Filial> from,
            Map<String, Path<?>> mapFieldPaths) {
        super.addGlobalFilterPredicates(pageRequest, predicates, cBuilder, from, mapFieldPaths);
        String globalFilter = pageRequest.getGlobalFilter();
        List<Predicate> globalFilterPredicates = new ArrayList<>();
        globalFilterPredicates.add(this.createFieldPredicate("versaoEntidade", Operator.EQ, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("dhCriacao", Operator.EQ, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("dhModificacao", Operator.EQ, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("flHabilitado", Operator.EQ, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("nmLogin", Operator.LI, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("codigo", Operator.LI, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("nomeFantasia", Operator.LI, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("razaoSocial", Operator.LI, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("idEmpresa", Operator.EQ, globalFilter, mapFieldPaths, from, cBuilder));
        globalFilterPredicates.add(this.createFieldPredicate("nmLoginAlteracao", Operator.LI, globalFilter, mapFieldPaths, from, cBuilder));
        if (!globalFilterPredicates.isEmpty()) {
            Predicate predicateOr = cBuilder.or(globalFilterPredicates.toArray(new Predicate[0]));
            predicates.add(predicateOr);
        }
    }

}