//
// Source code generated by Celerio, a Jaxio product.
// Documentation: http://www.jaxio.com/documentation/celerio/
// Follow us on twitter: @jaxiosoft
// Need commercial support ? Contact us: info@jaxio.com
// Template celerio-pack-frontend:src/app/entities/entity/entity-list/entity-list.component.ts.e.vm
// Template is part of Open Source Project: https://github.com/jaxio/javaee-lab
//
import { Component, Input } from '@angular/core';
import { EntityListComponent } from '../../../framework/components/entity-list.component';
import { Router } from '@angular/router';
import { MessageService } from '../../../util/message.service';
import { MatDialog } from '@angular/material';
import { FilterMetadata } from '../../../framework/service/paging/filtermetadata';
import { Operator } from '../../../framework/service/paging/operator';
import { Filial } from '../filial';
import { FilialService } from '../filial.service';
import { FilialDataSource } from '../filial.datasource';
import { Empresa } from '../../empresa/empresa';

@Component({
  selector: 'app-filial-list',
  templateUrl: './filial-list.component.html',
  styleUrls: ['./filial-list.component.scss']
})
export class FilialListComponent extends EntityListComponent<Filial, FilialService> {

    // X to one: input param is used to filter the list when displayed
    // as a one-to-many list by the other side.
    private _idEmpresa: Empresa;

    constructor(protected router: Router,
        protected messageService: MessageService,
        protected confirmDeleteDialog: MatDialog,
        protected entityService: FilialService) {
        super(router, messageService, confirmDeleteDialog, entityService, 'Filial');
        // inicialização do dataSource
        this.dataSource = new FilialDataSource(this.paginator, this.sort, this.entityService);
        // configura as colunas exibidas no datatable.
        this.displayedColumns = [
            'versaoEntidade',
            'dhCriacao',
            'dhModificacao',
            'flHabilitado',
            'nmLogin',
            'codigo',
            'actions'
        ];
        // configura os campos de filtro
        this.filters['versaoEntidade'] = new FilterMetadata(null, Operator.EQ);
        this.filters['dhCriacao'] = new FilterMetadata(null, Operator.EQ);
        this.filters['dhModificacao'] = new FilterMetadata(null, Operator.EQ);
        this.filters['flHabilitado'] = new FilterMetadata(null, Operator.EQ);
        this.filters['nmLogin'] = new FilterMetadata(null, Operator.LI);
        this.filters['codigo'] = new FilterMetadata(null, Operator.LI);
        this.filters['nomeFantasia'] = new FilterMetadata(null, Operator.LI);
        this.filters['razaoSocial'] = new FilterMetadata(null, Operator.LI);
        this.filters['idEmpresa.id'] = new FilterMetadata(null, Operator.EQ);
        this.filters['nmLoginAlteracao'] = new FilterMetadata(null, Operator.LI);
    }


    // X to one: input param is used to filter the list when displayed
    // as a one-to-many list by the other side.
    @Input()
    set idEmpresa(idEmpresa: Empresa) {
        if (idEmpresa == null) {
            return;
        }
        this._idEmpresa = idEmpresa;
        this.filters['idEmpresa'].value = this._idEmpresa.id;
    }
}
