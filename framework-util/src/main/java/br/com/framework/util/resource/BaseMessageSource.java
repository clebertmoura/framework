/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template celerio-pack-backend:src/main/java/util/DefaultMessageSource.p.vm.java
 */
package br.com.framework.util.resource;

import static com.google.common.collect.Maps.newHashMap;

import java.text.MessageFormat;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.MissingResourceException;
import java.util.ResourceBundle;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.google.common.collect.Lists;

/**
 * Implementação do {@link MessageSource}
 * 
 * @author Cleber Moura <cleber.t.moura@gmail.com>
 *
 */
public abstract class BaseMessageSource implements MessageSource {

	protected Logger logger = LoggerFactory.getLogger(BaseMessageSource.class);

	protected Map<String, Map<Locale, ResourceBundle>> resourceBundles = newHashMap();

	protected List<String> basenames = Lists.newArrayList();

	@Override
	public void setBasenames(String... basenames) {
		if (basenames != null && basenames.length > 0) {
			this.basenames.clear();
			this.basenames.addAll(Arrays.asList(basenames));
		}
	}

	@Override
	public String getMessage(Locale locale, String key, Object... args) {
		if (key == null) {
			return "";
		}
		String messageFormat = getMessageFormatFromKey(locale, key);
		if (messageFormat != null) {
			if (args == null || args.length == 0) {
				return messageFormat;
			} else {
				return MessageFormat.format(messageFormat, args);
			}
		} else {
			return "";
		}
	}

	/**
	 * @param locale
	 * @param key
	 * @return
	 */
	protected String getMessageFormatFromKey(Locale locale, String key) {
		String messageFormat = null;
		for (String basename : basenames) {
			ResourceBundle resourceBundle = getResourceBundle(locale, basename);
			try {
				messageFormat = resourceBundle.getString(key);
			} catch (MissingResourceException e) {
				//logger.error("No message format from key " + basename, e);
			}
			if (messageFormat != null) {
				break;
			}
		}
		if (messageFormat == null) {
			messageFormat = key;
		}
		return messageFormat;
	}

	/**
	 * @param locale
	 * @param basename
	 * @return
	 */
	protected ResourceBundle getResourceBundle(Locale locale, String basename) {
		ResourceBundle resourceBundle = null;
		Map<Locale, ResourceBundle> basenameResourceBundle = resourceBundles.get(basename);
		if (basenameResourceBundle != null) {
			resourceBundle = basenameResourceBundle.get(locale);
		} else {
			resourceBundles.put(basename, new HashMap<Locale, ResourceBundle>());
		}

		if (resourceBundle == null) {
			try {
				resourceBundle = ResourceBundle.getBundle(basename, locale, getClass().getClassLoader());
			} catch (MissingResourceException e) {
				logger.error("No resource bundle file for %s", basename, e);
				throw e;
			}
			resourceBundles.get(basename).put(locale, resourceBundle);
		}

		return resourceBundle;
	}

	public static void main(String[] args) {
		String format = MessageFormat.format("{0} e {0} a {0}", "teste", "teste", "teste");
		System.out.println(format);
	}
}
