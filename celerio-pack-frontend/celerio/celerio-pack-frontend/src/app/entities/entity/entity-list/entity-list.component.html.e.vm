$output.file("src/app/entities/${entity.model.type.toLowerCase()}/${entity.model.type.toLowerCase()}-list/${entity.model.type.toLowerCase()}-list.component.html")##
<app-loading-spinner-overlay label="Carregando..." *ngIf="dataSource.loading${dollar} | async"></app-loading-spinner-overlay>
<div>

    <!-- Main content -->
    <section class="content">

        <h2>Gerenciar ${entity.labels.label}</h2>

        <div *ngIf="!sub" class="card mt-3 shadow-sm">
            <div class="card-body">
                <h4 class="card-title">Filtros de Pesquisa</h4>

## -- [MACRO]
#macro(listXToOneEdit $relation)
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <app-${relation.toEntity.model.type.toLowerCase()}-autocomplete [dropdown]="true" [(ngModel)]="filters['${relation.to.var}.id'].value" [id]="'{$relation.to.var}'"
                            name="{$relation.to.var}" label="${relation.labels.label}" displayfield="${relation.toEntity.printerAttributes.flatUp.list.get(0).var}">
                        </app-${relation.toEntity.model.type.toLowerCase()}-autocomplete>
                    </div>
                </div>
#end

#foreach($attr in $entity.searchAttributes.flatUp.list)
#if ($attr.isSimplePk() && !$attr.jpa.isManuallyAssigned())
## no need to display it...
#elseif($attr.isSimpleFk())
#listXToOneEdit($attr.getXToOneRelation())
#elseif(!$attr.isVersion())
#if($attr.isInCpk())
#set( $valuePath = "${identifiableProperty.var}.${attr.var}")##
#else
#set( $valuePath = "${attr.var}")##
#end

                <div class="form-row">
                    <div class="form-group col-md-12">
#if($attr.isTextArea())
                        <label for="$attr.var">$attr.labels.label</label>
                        <textarea class="form-control" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var" ${p}$attr.var="ngModel"></textarea>
#elseif($attr.isEnum())
                        <label>$attr.labels.label</label>
                        <div>
                            <div class="custom-control custom-radio custom-control-inline" *ngFor="let ${attr.var}Option of cacheEnums['${attr.enumModel.type}']; let i = index">
                                <input type="radio" name="$attr.var" id="{{'${attr.var}Option' + i}}" class="custom-control-input" [value]="${attr.var}Option.key" [(ngModel)]="filters['$valuePath'].value">
                                <label class="custom-control-label" for="{{'${attr.var}Option' + i}}">{{ ${attr.var}Option.label }}</label>
                            </div>
                        </div>
#elseif($attr.isEmail())
                        <label for="$attr.var">$attr.labels.label</label>
                        <input class="form-control" type="email" [(ngModel)]="filters['$valuePath'].value" validateEmail name="$attr.var" id="$attr.var"
                            ${p}$attr.var="ngModel" />
#elseif($attr.isUrl())
                        <label for="$attr.var">$attr.labels.label</label>
                        <input class="form-control" type="url" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var"
                            pattern="^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?" ${p}$attr.var="ngModel" />
#elseif($attr.isString())
                        <label for="$attr.var">$attr.labels.label</label>
                        <input class="form-control" type="text" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var"
                            ${p}$attr.var="ngModel" />
#elseif($attr.isNumeric())
                        <label for="$attr.var">$attr.labels.label</label>
                        <input class="form-control" type="number" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var"
                            ${p}$attr.var="ngModel" />
#elseif($attr.isDate() && !$attr.isVersion())
#if($attr.isJavaUtilOnlyDate() || $attr.isLocalDate())
                        <label for="$attr.var">$attr.labels.label</label>
                        <app-datetime-picker [(ngModel)]="filters['$valuePath'].value" #required($attr) name="$attr.var" [id]="'$attr.var'"
                            placement="bottom-left"></app-datetime-picker>
#elseif($attr.isLocalDateTime() || $attr.isInstant())
                        <label for="$attr.var">$attr.labels.label</label>
                        <app-datetime-picker [(ngModel)]="filters['$valuePath'].value" #required($attr) name="$attr.var" [id]="'$attr.var'" [timePicker]="true"
                            placement="bottom-left"></app-datetime-picker>
#else
                        <label for="$attr.var">$attr.labels.label</label>
                        <app-datetime-picker [(ngModel)]="filters['$valuePath'].value" #required($attr) name="$attr.var" [id]="'$attr.var'" [timePicker]="true"
                            placement="bottom-left"></app-datetime-picker>
#end
#elseif($attr.isBoolean())

                        <input class="custom-control-input" type="checkbox" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var"
                            ${p}$attr.var="ngModel" />
                        <label for="$attr.var">$attr.labels.label</label>
#else
                        <label for="$attr.var">$attr.labels.label</label>
                        <input class="form-control" type="text" [(ngModel)]="filters['$valuePath'].value" name="$attr.var" id="$attr.var"
                            ${p}$attr.var="ngModel" />
#end
                    </div>
                </div>

#end ##---------- [/NON VERSION]
#end ## foreach(....

                <button class="btn btn-primary" (click)="onClickSearch()">
                    <i class="fas fas fa-search"></i> Pesquisar
                </button>

            </div>
        </div>

        <div class="search-results card mt-4 shadow-sm">
            <div class="card-body">

                <div class="form-row">
                    <div class="form-group col-md-8">
                        <button class="btn btn-primary" (click)="onClickNew()">
                            <i class="fas fa-plus"></i> Adicionar
                        </button>
                    </div>
                    <div class="form-group col-md-4">
                        <input class="form-control" type="text" placeholder="Filtrar" aria-label="Filtrar" #searchInput />
                    </div>
                </div>

                <div class="table-responsive">

                    <table cdk-table class="table table-hover table-striped" [dataSource]="dataSource" matSort matSortDirection="asc" matSortDisableClear>

## --- Result attributes
#foreach ($attr in $entity.searchResultAttributes.flatUp.list)
	#if(!$attr.isInPk() && !$attr.isFile())
		#if ($attr.hasXToOneRelation())
                        <ng-container cdkColumnDef="$attr.xToOneRelation.to.var">
                            <th cdk-header-cell *cdkHeaderCellDef mat-sort-header>$attr.labels.label.toUpperCase()</th>
                            <td cdk-cell *cdkCellDef="let entity">
                                <app-${attr.xToOneRelation.toEntity.model.type.toLowerCase()}-line [entity]="entity"></app-${attr.xToOneRelation.toEntity.model.type.toLowerCase()}-line>
                            </td>
                        </ng-container>
		#else
			#### CPK support
			#if($attr.isInCpk())
				#set( $valuePath = "entity.${identifiableProperty.var}.${attr.var}")##
			#else
				#set( $valuePath = "entity.${attr.var}")##
			#end
			#####
			#if($attr.isLocalDate())
                        <ng-container cdkColumnDef="$attr.var">
                            <th cdk-header-cell *cdkHeaderCellDef mat-sort-header>$attr.labels.label.toUpperCase()</th>
                            <td cdk-cell *cdkCellDef="let entity">{{$valuePath | date:"dd/MM/yyyy" }}</td>
                        </ng-container>
			#elseif($attr.isLocalDateTime())
                        <ng-container cdkColumnDef="$attr.var">
                            <th cdk-header-cell *cdkHeaderCellDef mat-sort-header>$attr.labels.label.toUpperCase()</th>
                            <td cdk-cell *cdkCellDef="let entity">{{$valuePath | date:"dd/MM/yyyy HH:mm" }}</td>
                        </ng-container>
			#else
                        <ng-container cdkColumnDef="$attr.var">
                            <th cdk-header-cell *cdkHeaderCellDef mat-sort-header>$attr.labels.label.toUpperCase()</th>
                            <td cdk-cell *cdkCellDef="let entity">{{$valuePath}}</td>
                        </ng-container>
			#end
		#end
	#end
#end

                        <ng-container cdkColumnDef="actions">
                            <th cdk-header-cell *cdkHeaderCellDef><span class="sr-only">Ações</span></th>
                            <td cdk-cell *cdkCellDef="let entity" class="col-actions text-right">
                                <button ngbTooltip="Detalhar" class="btn btn-sm btn-outline-dark grid-button" (click)="onClickView(entity)" aria-label="Detalhar">
                                    <i class="fas fa-fw fa-file"></i>
                                </button>
                                <button ngbTooltip="Editar" class="btn btn-sm btn-outline-dark grid-button" (click)="onClickEdit(entity)" aria-label="Editar">
                                    <i class="fas fa-fw fa-pen"></i>
                                </button>
                                <button ngbTooltip="Excluir" class="btn btn-sm btn-outline-dark grid-button" (click)="onClickRemove(entity)" aria-label="Excluir">
                                    <i class="fas fa-fw fa-trash"></i>
                                </button>
                            </td>
                        </ng-container>

                        <tr cdk-header-row *cdkHeaderRowDef="displayedColumns"></tr>
                        <tr cdk-row *cdkRowDef="let row; columns: displayedColumns"></tr>

                    </table>

                </div>
                <ngb-pagination class="d-flex justify-content-center" [collectionSize]="dataSource.itemsCount$ | async" [(page)]="paginator.page" [pageSize]="paginator.pageSize" (pageChange)="onPageChanges(${dollar}event)" [boundaryLinks]="true"></ngb-pagination>
            </div>
        </div>

    </section>
    <!-- /.content -->

</div>
